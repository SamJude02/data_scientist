# blockchain.rb

# Les deux tableaux fournis
currencies = [
  "Bitcoin", "Ethereum", "Litecoin", "Ripple", "Dogecoin",
  "Cardano", "Polkadot", "Solana", "Chainlink", "Stellar"
]

prices = [
  64852.23, 3221.75, 198.24, 1.23, 0.325,
  1.02, 6.75, 21.89, 7.23, 0.11
]

# 1. On crÃ©e le hash crypto => prix
crypto_hash = {}
currencies.each_with_index do |name, index|
  crypto_hash[name] = prices[index]
end

puts "\nðŸ“Š Hash des cryptomonnaies :"
puts crypto_hash

# 2. Afficher les cryptos dont le prix > 1000â‚¬
puts "\nðŸ’¸ Cryptos avec un prix supÃ©rieur Ã  1000â‚¬ :"
crypto_hash.each do |name, price|
  puts "#{name} => #{price}â‚¬" if price > 1000
end

# 3. Trier les cryptos par prix croissant
puts "\nðŸ”½ Cryptos triÃ©es par prix croissant :"
crypto_hash.sort_by { |_, price| price }.each do |name, price|
  puts "#{name} => #{price}â‚¬"
end

# 4. Trier les cryptos par prix dÃ©croissant
puts "\nðŸ”¼ Cryptos triÃ©es par prix dÃ©croissant :"
crypto_hash.sort_by { |_, price| -price }.each do |name, price|
  puts "#{name} => #{price}â‚¬"
end

# 5. Afficher la crypto la plus chÃ¨re
most_expensive = crypto_hash.max_by { |_, price| price }
puts "\nðŸ’° Crypto la plus chÃ¨re : #{most_expensive[0]} => #{most_expensive[1]}â‚¬"

# 6. Afficher la crypto la moins chÃ¨re
least_expensive = crypto_hash.min_by { |_, price| price }
puts "\nðŸª™ Crypto la moins chÃ¨re : #{least_expensive[0]} => #{least_expensive[1]}â‚¬"
